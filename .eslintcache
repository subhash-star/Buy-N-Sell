[{"C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\index.js":"1","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\App.js":"2","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\reportWebVitals.js":"3","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Header\\index.js":"4","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Products\\index.js":"5","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Item\\index.js":"6","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Favourites\\index.js":"7","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Header\\styles.js":"8","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Item\\styles.js":"9","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Products\\styles.js":"10","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Login\\style.js":"11","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Signup\\style.js":"12","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Profile\\Profile.js":"13","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Signup\\index.js":"14","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Ads\\index.js":"15","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Login\\index.js":"16","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\ProductForm\\index.js":"17","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Footer\\index.js":"18"},{"size":754,"mtime":1617958054801,"results":"19","hashOfConfig":"20"},{"size":2703,"mtime":1618485767462,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":3686,"mtime":1618476383137,"results":"23","hashOfConfig":"20"},{"size":13658,"mtime":1618476445694,"results":"24","hashOfConfig":"20"},{"size":4871,"mtime":1618476692007,"results":"25","hashOfConfig":"20"},{"size":6313,"mtime":1618476735713,"results":"26","hashOfConfig":"20"},{"size":1524,"mtime":1617987637186,"results":"27","hashOfConfig":"20"},{"size":918,"mtime":1618133859105,"results":"28","hashOfConfig":"20"},{"size":1119,"mtime":1618329413111,"results":"29","hashOfConfig":"20"},{"size":546,"mtime":1618329480430,"results":"30","hashOfConfig":"20"},{"size":488,"mtime":1617169013608,"results":"31","hashOfConfig":"20"},{"size":7502,"mtime":1618476584448,"results":"32","hashOfConfig":"20"},{"size":4819,"mtime":1618476664042,"results":"33","hashOfConfig":"20"},{"size":5647,"mtime":1618476775831,"results":"34","hashOfConfig":"20"},{"size":2965,"mtime":1618476480897,"results":"35","hashOfConfig":"20"},{"size":5218,"mtime":1618476617938,"results":"36","hashOfConfig":"20"},{"size":1160,"mtime":1618329692528,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1xsn7w1",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"41"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\index.js",["86"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { transitions, types, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst options = {\n  timeout: 5000,\n  offset: \"50px\",\n  transition: transitions.SCALE,\n};\nReactDOM.render(\n  <AlertProvider template={AlertTemplate} {...options}>\n    <App />\n  </AlertProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["87","88"],"C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\App.js",[],"C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\reportWebVitals.js",[],"C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Header\\index.js",["89","90"],"import {\r\n  AppBar,\r\n  Button,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport { AccountCircle } from \"@material-ui/icons\";\r\nimport { useState } from \"react\";\r\nimport useStyles from \"./styles.js\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./index.css\";\r\nimport logo from \"./logo.jpg\";\r\n\r\nconst Header = ({\r\n  isLoggedIn,\r\n  setcurUser,\r\n  setisLoggedIn,\r\n  setcurPage,\r\n  apiURL,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const alert = useAlert();\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const logout = async () => {\r\n    try {\r\n      await axios.get(`${apiURL}/users/logout`, { withCredentials: true });\r\n      setisLoggedIn(false);\r\n      setcurUser(\"\");\r\n      alert.success(\"successfully logged-out\");\r\n    } catch (err) {\r\n      alert(\"some error occured\");\r\n    }\r\n  };\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <Link to=\"/profile\" style={{ textDecoration: \"none\", color: \"initial\" }}>\r\n        <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n      </Link>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar className={classes.appbar} position=\"static\">\r\n        <Toolbar>\r\n          <Link\r\n            className={classes.title}\r\n            to=\"/\"\r\n            style={{ textDecoration: \"none\", color: \"initial\" }}\r\n            onClick={() => setcurPage(1)}\r\n          >\r\n            <img src={logo} height={70} />\r\n          </Link>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            {isLoggedIn == true ? (\r\n              <>\r\n                <Button\r\n                  size=\"small\"\r\n                  className={classes.logoutBtn}\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  onClick={logout}\r\n                >\r\n                  Log-out\r\n                </Button>\r\n                <IconButton\r\n                  aria-label=\"account of current user\"\r\n                  // aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleProfileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle fontSize=\"large\" color=\"secondary\" />\r\n                </IconButton>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Link\r\n                  style={{ textDecoration: \"none\", color: \"initial\" }}\r\n                  to={`/login`}\r\n                >\r\n                  <Button\r\n                    className={classes.btn}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                  >\r\n                    Log-in\r\n                  </Button>\r\n                </Link>\r\n                <Link\r\n                  style={{ textDecoration: \"none\", color: \"initial\" }}\r\n                  to={`/signup`}\r\n                >\r\n                  <Button variant=\"outlined\" color=\"secondary\">\r\n                    Sign-Up\r\n                  </Button>\r\n                </Link>\r\n              </>\r\n            )}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Products\\index.js",["91","92","93","94","95","96"],"import {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  CircularProgress,\r\n  Grid,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, Redirect, useLocation } from \"react-router-dom\";\r\nimport Footer from \"../Footer\";\r\nimport useStyles from \"./styles.js\";\r\nimport { PaginationItem } from \"@material-ui/lab\";\r\n\r\nconst Products = ({\r\n  isLoggedIn,\r\n  curUser,\r\n  setcurUser,\r\n  curPage,\r\n  setcurPage,\r\n  apiURL,\r\n}) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const [productList, setproductList] = useState([]);\r\n  const alert = useAlert();\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const [loading, setloading] = useState(true);\r\n  const [countPages, setcountPages] = useState(0);\r\n\r\n  const addToFavourites = async (id) => {\r\n    try {\r\n      let response = await axios({\r\n        method: \"post\",\r\n        url: `${apiURL}/users/favourites`,\r\n        data: {\r\n          id,\r\n        },\r\n        withCredentials: true,\r\n      });\r\n      setcurUser(response.data.user);\r\n    } catch (err) {\r\n      alert.error(\"some error occured. please try again\");\r\n    }\r\n  };\r\n  const deleteFromFavourites = async (id) => {\r\n    try {\r\n      let response = await axios({\r\n        method: \"delete\",\r\n        url: `${apiURL}/users/favourites`,\r\n        data: {\r\n          id,\r\n        },\r\n        withCredentials: true,\r\n      });\r\n      setcurUser(response.data.user);\r\n    } catch (err) {\r\n      alert.error(\"some error occured. please try again\");\r\n    }\r\n  };\r\n  const pageChange = (event, value) => {\r\n    setcurPage(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      try {\r\n        setloading(true);\r\n        let data = await axios.get(`${apiURL}/products${location.search}`, {\r\n          withCredentials: true,\r\n        });\r\n        setloading(false);\r\n        setproductList((productList) => data.data.data.products);\r\n        setcountPages(Math.ceil(data.data.countProducts / 9));\r\n      } catch (err) {\r\n        alert.error(\"error in loading . please try again\");\r\n      }\r\n    }\r\n    getData();\r\n  }, [location]);\r\n\r\n  return (\r\n    <div>\r\n      {loading == true ? (\r\n        <div className={classes.prog}>\r\n          <CircularProgress size={70} />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className={classes.wholecontainer}>\r\n            <Grid container spacing={0}>\r\n              <Grid item md>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"center\"\r\n                  spacing={4}\r\n                >\r\n                  <Grid item md={12}>\r\n                    <Accordion className={classes.accordion}>\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          Categories\r\n                        </Typography>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.content}>\r\n                        <Box mt={0.5}></Box>\r\n                        <Link\r\n                          style={{ textDecoration: \"none\", color: \"initial\" }}\r\n                          to={`?category=electronics${\r\n                            query.get(\"sort\")\r\n                              ? `&sort=${query.get(\"sort\")}`\r\n                              : \"\"\r\n                          }`}\r\n                          onClick={() => setcurPage(1)}\r\n                        >\r\n                          <Typography>Electronics</Typography>\r\n                        </Link>\r\n                        <Box mt={0.5}></Box>\r\n                        <Link\r\n                          style={{ textDecoration: \"none\", color: \"initial\" }}\r\n                          to={`?category=fashion${\r\n                            query.get(\"sort\")\r\n                              ? `&sort=${query.get(\"sort\")}`\r\n                              : \"\"\r\n                          }`}\r\n                          onClick={() => setcurPage(1)}\r\n                        >\r\n                          <Typography>Fashion</Typography>\r\n                        </Link>\r\n                        <Box mt={0.5}></Box>\r\n                        <Link\r\n                          style={{ textDecoration: \"none\", color: \"initial\" }}\r\n                          to={`?category=vehicles${\r\n                            query.get(\"sort\")\r\n                              ? `&sort=${query.get(\"sort\")}`\r\n                              : \"\"\r\n                          }`}\r\n                          onClick={() => setcurPage(1)}\r\n                        >\r\n                          <Typography>Vehicles</Typography>\r\n                        </Link>\r\n                        <Box mt={0.5}></Box>\r\n                        <Link\r\n                          style={{ textDecoration: \"none\", color: \"initial\" }}\r\n                          to={`?category=lifestyle${\r\n                            query.get(\"sort\")\r\n                              ? `&sort=${query.get(\"sort\")}`\r\n                              : \"\"\r\n                          }`}\r\n                          onClick={() => setcurPage(1)}\r\n                        >\r\n                          <Typography>Home Decor</Typography>\r\n                        </Link>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  </Grid>\r\n                  <Grid item md={12}>\r\n                    <Accordion className={classes.accordion}>\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          Sort-by\r\n                        </Typography>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.content}>\r\n                        <Box mt={0.5}></Box>\r\n                        <Link\r\n                          style={{ textDecoration: \"none\", color: \"initial\" }}\r\n                          to={`?sort=priceIncreasing${\r\n                            query.get(\"category\")\r\n                              ? `&category=${query.get(\"category\")}`\r\n                              : \"\"\r\n                          }`}\r\n                          onClick={() => setcurPage(1)}\r\n                        >\r\n                          <Typography>Price-Increasing</Typography>\r\n                        </Link>\r\n                        <Box mt={0.5}></Box>\r\n                        <Link\r\n                          style={{ textDecoration: \"none\", color: \"initial\" }}\r\n                          to={`?sort=priceDecreasing${\r\n                            query.get(\"category\")\r\n                              ? `&category=${query.get(\"category\")}`\r\n                              : \"\"\r\n                          }`}\r\n                          onClick={() => setcurPage(1)}\r\n                        >\r\n                          <Typography>Price-Decreasing</Typography>\r\n                        </Link>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item md={8}>\r\n                <Grid className={classes.root} container spacing={5}>\r\n                  {productList.map((el) => (\r\n                    <Grid\r\n                      key={el._id}\r\n                      item\r\n                      md={4}\r\n                      className={classes.singleProduct}\r\n                    >\r\n                      {isLoggedIn === true ? (\r\n                        <IconButton className={classes.favIcon}>\r\n                          {curUser.favourites.includes(el._id) ? (\r\n                            <FavoriteIcon\r\n                              fontSize=\"large\"\r\n                              color=\"secondary\"\r\n                              onClick={() => deleteFromFavourites(el._id)}\r\n                            />\r\n                          ) : (\r\n                            <FavoriteBorderIcon\r\n                              fontSize=\"large\"\r\n                              color=\"secondary\"\r\n                              onClick={() => addToFavourites(el._id)}\r\n                            />\r\n                          )}\r\n                        </IconButton>\r\n                      ) : null}\r\n                      <Link\r\n                        style={{ textDecoration: \"none\", color: \"initial\" }}\r\n                        to={`/item/${el._id}`}\r\n                      >\r\n                        <Card className={classes.element}>\r\n                          <CardMedia\r\n                            className={classes.media}\r\n                            component=\"img\"\r\n                            alt=\"loading\"\r\n                            height=\"200\"\r\n                            image={el.images[0]}\r\n                            title={el.name}\r\n                          />\r\n\r\n                          <CardContent>\r\n                            <Typography gutterBottom variant=\"subtitle1\">\r\n                              {el.name.substring(0, 25)}...\r\n                            </Typography>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              color=\"textSecondary\"\r\n                              component=\"h6\"\r\n                            >\r\n                              Price :{el.price}\r\n                            </Typography>\r\n                          </CardContent>\r\n                        </Card>\r\n                      </Link>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n\r\n                <Pagination\r\n                  className={classes.paginationItem}\r\n                  count={countPages}\r\n                  color=\"secondary\"\r\n                  page={curPage}\r\n                  onChange={pageChange}\r\n                  renderItem={(item) => (\r\n                    <PaginationItem\r\n                      component={Link}\r\n                      to={`?page=${item.page}${\r\n                        query.get(\"category\")\r\n                          ? `&category=${query.get(\"category\")}`\r\n                          : \"\"\r\n                      }${\r\n                        query.get(\"sort\") ? `&sort=${query.get(\"sort\")}` : \"\"\r\n                      }`}\r\n                      {...item}\r\n                    />\r\n                  )}\r\n                />\r\n              </Grid>\r\n              <Grid className={classes.sideItem} item md>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\"\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"center\"\r\n                  spacing={2}\r\n                >\r\n                  <Grid item md={12}>\r\n                    {isLoggedIn == true ? (\r\n                      <Link\r\n                        to=\"/favourites\"\r\n                        style={{ textDecoration: \"none\", color: \"initial\" }}\r\n                      >\r\n                        <Button\r\n                          className={classes.favourites}\r\n                          endIcon={<FavoriteIcon />}\r\n                        >\r\n                          Favourites\r\n                        </Button>\r\n                      </Link>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item md={12}>\r\n                    {isLoggedIn == true ? (\r\n                      <Link\r\n                        to=\"/productform\"\r\n                        style={{ textDecoration: \"none\", color: \"initial\" }}\r\n                      >\r\n                        <Button\r\n                          className={classes.favourites}\r\n                          endIcon={<AddCircleIcon />}\r\n                        >\r\n                          sell\r\n                        </Button>\r\n                      </Link>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item md={12}>\r\n                    {isLoggedIn == true ? (\r\n                      <Link\r\n                        to=\"/ads\"\r\n                        style={{ textDecoration: \"none\", color: \"initial\" }}\r\n                      >\r\n                        <Button\r\n                          className={classes.favourites}\r\n                          endIcon={<StoreIcon />}\r\n                        >\r\n                          my ads\r\n                        </Button>\r\n                      </Link>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Item\\index.js",["97","98"],"import {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport useStyles from \"./styles\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport axios from \"axios\";\r\nimport \"./index.css\";\r\nimport Footer from \"../Footer\";\r\n\r\nconst Item = ({ isLoggedIn, apiURL }) => {\r\n  const classes = useStyles();\r\n  let { id } = useParams();\r\n  let alert = useAlert();\r\n  const [itemDetails, setitemDetails] = useState(\"\");\r\n  const [loading, setloading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      try {\r\n        setloading(true);\r\n        let data = await axios.get(`${apiURL}/products/${id}`, {\r\n          withCredentials: true,\r\n        });\r\n        data = data.data.data.product;\r\n        let markup = (\r\n          <div className=\"whole-container\">\r\n            <Carousel className=\"img\">\r\n              {data.images.map((el) => (\r\n                <div className={classes.sliderWrapper}>\r\n                  <img src={el} />\r\n                </div>\r\n              ))}\r\n            </Carousel>\r\n            <Box\r\n              mt={2}\r\n              border={1}\r\n              borderRadius=\"borderRadius\"\r\n              borderColor=\"grey.300\"\r\n            >\r\n              <Box pl={4} pt={2}>\r\n                <Typography variant=\"h6\" color=\"textPrimary\">\r\n                  {data.name}\r\n                </Typography>\r\n              </Box>\r\n              <Box pl={4} py={2}>\r\n                <Typography variant=\"h6\">₹{data.price}</Typography>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              mt={2}\r\n              border={1}\r\n              borderRadius=\"borderRadius\"\r\n              borderColor=\"grey.300\"\r\n            >\r\n              <Box pl={4} pt={2}>\r\n                <Typography color=\"textPrimary\" variant=\"h6\">\r\n                  Details\r\n                </Typography>\r\n              </Box>\r\n              <Box px={4} py={2}>\r\n                <Typography color=\"textSecondary\" varient=\"body1\">\r\n                  {data.description}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              mt={2}\r\n              border={1}\r\n              borderRadius=\"borderRadius\"\r\n              borderColor=\"grey.300\"\r\n              className=\"last-box\"\r\n            >\r\n              <Button\r\n                pl={4}\r\n                pt={2}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<PhoneIcon fontSize=\"large\" />}\r\n                className={classes.btn}\r\n              >\r\n                <div style={{ display: \"block\" }}>\r\n                  {isLoggedIn === true ? (\r\n                    <>\r\n                      {\" \"}\r\n                      <div>contact seller</div>\r\n                      <div>{data.seller.phoneNo}</div>{\" \"}\r\n                    </>\r\n                  ) : (\r\n                    <div>Log-in to see seller contact</div>\r\n                  )}\r\n                </div>\r\n              </Button>\r\n              <Box\r\n                px={4}\r\n                py={2}\r\n                border={1}\r\n                borderColor=\"grey.300\"\r\n                style={{ width: \"50%\" }}\r\n              >\r\n                <Typography color=\"textPrimary\" variant=\"h6\">\r\n                  Buyer Guidlines\r\n                </Typography>\r\n                <Typography color=\"textSecondary\" varient=\"body1\">\r\n                  • Be careful when paying offline.\r\n                </Typography>\r\n                <Typography color=\"textSecondary\" varient=\"body1\">\r\n                  • Beware of ads with unrealistic prices, look alikes or clone\r\n                  products.\r\n                </Typography>\r\n                <Typography color=\"textSecondary\" varient=\"body1\">\r\n                  • Do not deposit/transfer money to bank or any third party\r\n                  payment gateways without verifying the credentials.\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          </div>\r\n        );\r\n        setloading(false);\r\n        setitemDetails(markup);\r\n      } catch (err) {\r\n        alert.error(\"some error occured. please try again\");\r\n      }\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {loading === true ? (\r\n        <div className={classes.prog}>\r\n          <CircularProgress size={70} />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Container className=\"grid--container\" maxWidth=\"md\">\r\n            {itemDetails}\r\n          </Container>\r\n          <Footer />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Favourites\\index.js",["99","100"],"import {\r\n  Box,\r\n  CardMedia,\r\n  CircularProgress,\r\n  ClickAwayListener,\r\n  Container,\r\n  IconButton,\r\n  makeStyles,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport \"./index.css\";\r\nimport Footer from \"../Footer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    width: \"160px\",\r\n    height: \"140px\",\r\n    border: \"1px solid #cca\",\r\n    margin: \"7%\",\r\n    objectFit: \"fill\",\r\n  },\r\n  root: {\r\n    position: \"relative\",\r\n  },\r\n  dropdown: {\r\n    position: \"absolute\",\r\n    top: 28,\r\n    right: 0,\r\n    left: 0,\r\n    zIndex: 1,\r\n    boxShadow: \"0px 0px 2px 3px #ccc\",\r\n    borderRadius: \"5px\",\r\n    padding: theme.spacing(1),\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginLeft: \"-110px\",\r\n    fontWeight: \"600\",\r\n    height: \"50px\",\r\n  },\r\n  prog: {\r\n    display: \"flex\",\r\n    paddingLeft: \"45%\",\r\n  },\r\n}));\r\n\r\nconst Favourites = ({ curUser, apiURL }) => {\r\n  const classes = useStyles();\r\n  const alert = useAlert();\r\n  const [favouriteList, setfavouriteList] = useState([]);\r\n  const [openedId, setopenedId] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [loading, setloading] = useState(true);\r\n  const [operationPerformed, setoperationPerformed] = useState(0);\r\n\r\n  const handleClick = (id) => {\r\n    setopenedId(id);\r\n    setOpen((prev) => !prev);\r\n  };\r\n  const handleClickAway = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const deleteFavourite = async (id) => {\r\n    try {\r\n      setloading(true);\r\n      await axios({\r\n        method: \"delete\",\r\n        url: `${apiURL}/users/favourites`,\r\n        data: {\r\n          id,\r\n        },\r\n        withCredentials: true,\r\n      });\r\n      curUser.favourites.splice(curUser.favourites.indexOf(id), 1);\r\n      setoperationPerformed((prev) => (prev == 0 ? 1 : 0));\r\n      alert.success(\"item deleted successfully\");\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert.error(\"something went wrong\");\r\n    } finally {\r\n      setloading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    async function getData() {\r\n      try {\r\n        setloading(true);\r\n        let response = await axios.get(`${apiURL}/users/favourites`, {\r\n          withCredentials: true,\r\n        });\r\n        setfavouriteList((favouriteList) => response.data.favourites);\r\n        setloading(false);\r\n      } catch (err) {\r\n        alert.error(\"Something went wrong, please try again later\");\r\n      }\r\n    }\r\n    getData();\r\n  }, [operationPerformed]);\r\n  return (\r\n    <>\r\n      {loading === true ? (\r\n        <div className={classes.prog}>\r\n          <CircularProgress size={70} />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"content\">\r\n            <Container className=\"grid--container\" maxWidth=\"md\">\r\n              <Typography\r\n                variant=\"h4\"\r\n                style={{ fontWeight: 600 }}\r\n                color=\"primary\"\r\n              >\r\n                Your Favourites\r\n              </Typography>\r\n              <br></br>\r\n              {favouriteList.map((el, index) => (\r\n                <>\r\n                  <div\r\n                    key={el._id}\r\n                    className={\r\n                      !el.active ? \"overlay favourite-box\" : \"favourite-box\"\r\n                    }\r\n                  >\r\n                    <Link to={`/item/${el._id}`}>\r\n                      <CardMedia\r\n                        className={classes.media}\r\n                        component=\"img\"\r\n                        image={`${el.images[0]}`}\r\n                        title={`${el.name}`}\r\n                      />\r\n                    </Link>\r\n                    <Link\r\n                      to={`/item/${el._id}`}\r\n                      style={{\r\n                        textDecoration: \"none\",\r\n                        color: \"initial\",\r\n                        marginLeft: \"5%\",\r\n                      }}\r\n                    >\r\n                      {!el.active ? (\r\n                        <h1 style={{ color: \"orange\" }}>\r\n                          this item is no longer available\r\n                        </h1>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      <Box pt={4}>\r\n                        <Box>\r\n                          <Typography variant=\"h6\" color=\"textPrimary\">\r\n                            {el.name}\r\n                          </Typography>\r\n                        </Box>\r\n                        <Box py={2}>\r\n                          <Typography variant=\"subtitle1\">\r\n                            ₹{el.price}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                    </Link>\r\n                    <div className=\"popper\">\r\n                      <ClickAwayListener\r\n                        onClickAway={\r\n                          openedId === index ? handleClickAway : () => {}\r\n                        }\r\n                      >\r\n                        <div className={classes.root}>\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              handleClick(index);\r\n                            }}\r\n                          >\r\n                            <MoreHorizIcon fontSize=\"large\" />\r\n                          </IconButton>\r\n                          {openedId === index ? (\r\n                            open ? (\r\n                              <div className={classes.dropdown}>\r\n                                <MenuItem\r\n                                  onClick={() => deleteFavourite(el._id)}\r\n                                >\r\n                                  Delete Favourite\r\n                                </MenuItem>\r\n                              </div>\r\n                            ) : null\r\n                          ) : null}\r\n                        </div>\r\n                      </ClickAwayListener>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              ))}\r\n            </Container>\r\n          </div>\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Favourites;\r\n","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Header\\styles.js",[],"C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Item\\styles.js",["101"],"import { makeStyles } from \"@material-ui/core\";\r\nimport { SignalWifi1BarLockSharp } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  prog: {\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n    paddingLeft: \"40%\",\r\n  },\r\n  // card: {\r\n  //   backgroundColor: \"#222\",\r\n  // },\r\n  media: {\r\n    height: \"500px\",\r\n    width: \"80%\",\r\n    border: \"3px solid #847f86\",\r\n    marginLeft: \"11%\",\r\n    objectFit: \"fill\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    height: \"120px\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  sliderWrapper: {\r\n    // height: \"300px\",\r\n    width: \"80%\",\r\n    marginLeft: \"10%\",\r\n    objectFit: \"fill\",\r\n  },\r\n  btn: {\r\n    width: \"200px\",\r\n    height: \"80px\",\r\n    marginLeft: \"20px\",\r\n  },\r\n}));\r\nexport default useStyles;\r\n","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Products\\styles.js",[],"C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Login\\style.js",[],"C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Signup\\style.js",[],"C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Profile\\Profile.js",["102","103","104","105","106"],"import {\r\n  Button,\r\n  CircularProgress,\r\n  Divider,\r\n  FormLabel,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"../Footer\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n    border: 0,\r\n    borderRadius: 3,\r\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n    color: \"white\",\r\n    height: 48,\r\n    padding: \"0 30px\",\r\n    marginTop: 30,\r\n    marginLeft: \"60%\",\r\n  },\r\n  menu: {\r\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n    borderRadius: 3,\r\n    color: \"white\",\r\n    width: \"30%\",\r\n    boxSizing: \"border-box\",\r\n  },\r\n  content: {\r\n    backgroundColor: \"#fff\",\r\n    margin: \"5% 5%\",\r\n  },\r\n  field: {\r\n    width: \"60%\",\r\n  },\r\n  prog: {\r\n    display: \"flex\",\r\n    paddingLeft: \"45%\",\r\n  },\r\n});\r\n\r\nconst Profile = ({ curUser, setcurUser, apiURL }) => {\r\n  const classes = useStyles();\r\n  const alert = useAlert();\r\n  const [userObj, setuserObj] = useState(curUser);\r\n  const [loading, setloading] = useState(false);\r\n  const handleNameChange = (event) => {\r\n    setuserObj({ ...userObj, name: event.target.value });\r\n  };\r\n  const handleEmailChange = (event) => {\r\n    setuserObj({ ...userObj, email: event.target.value });\r\n  };\r\n  const handleNumberChange = (event) => {\r\n    setuserObj({ ...userObj, phoneNo: event.target.value });\r\n  };\r\n  const submitUser = async () => {\r\n    try {\r\n      setloading(true);\r\n      let updatedUser = await axios({\r\n        method: \"patch\",\r\n        url: `${apiURL}/users/updateMe`,\r\n        data: {\r\n          name: userObj.name,\r\n          email: userObj.email,\r\n          phoneNo: userObj.phoneNo,\r\n        },\r\n        withCredentials: true,\r\n      });\r\n      setcurUser(updatedUser.data.data.user);\r\n      alert.success(\"Data updated successfully\");\r\n    } catch (err) {\r\n      alert.error(err.response.data.message);\r\n    } finally {\r\n      setloading(false);\r\n    }\r\n  };\r\n  const changePassword = async () => {\r\n    let passwordCurrent = document.getElementById(\"current-password\").value;\r\n    let password = document.getElementById(\"password\").value;\r\n    let passwordConfirm = document.getElementById(\"confirm-password\").value;\r\n    try {\r\n      setloading(true);\r\n      await axios({\r\n        method: \"patch\",\r\n        url: `${apiURL}/users/updatePassword`,\r\n        data: {\r\n          passwordCurrent,\r\n          password,\r\n          passwordConfirm,\r\n        },\r\n        withCredentials: true,\r\n      });\r\n      alert.success(\"password updated successfully\");\r\n      document.getElementById(\"current-password\").value = \"\";\r\n      document.getElementById(\"password\").value = \"\";\r\n      document.getElementById(\"confirm-password\").value = \"\";\r\n    } catch (err) {\r\n      alert.error(err.response.data.message);\r\n    } finally {\r\n      setloading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setuserObj(curUser);\r\n  }, [curUser]);\r\n  return (\r\n    <>\r\n      {loading === true ? (\r\n        <div className={classes.prog}>\r\n          <CircularProgress size={60} />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"user-view\">\r\n            <div className={classes.menu}>\r\n              <ul className=\"nav\">\r\n                <li className=\"list-item\">\r\n                  <SettingsIcon className=\"icon\" />\r\n                  SETTINGS\r\n                </li>\r\n                <li className=\"list-item\">\r\n                  <Link\r\n                    to=\"/ads\"\r\n                    style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                  >\r\n                    <StoreIcon className=\"icon\" />\r\n                    MY ADS\r\n                  </Link>\r\n                </li>\r\n                <li className=\"list-item\">\r\n                  <Link\r\n                    to=\"/favourites\"\r\n                    style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                  >\r\n                    <FavoriteIcon className=\"icon\" />\r\n                    MY FAVOURITES\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className={classes.content}>\r\n              <h2>Your Account Settings</h2>\r\n              <div className=\"form-input\">\r\n                <FormLabel>Name</FormLabel>\r\n                <br></br>\r\n                <TextField\r\n                  variant=\"filled\"\r\n                  margin=\"normal\"\r\n                  className={classes.field}\r\n                  variant=\"filled\"\r\n                  onChange={handleNameChange}\r\n                  value={`${userObj.name}`}\r\n                />\r\n              </div>\r\n              <div className=\"form-input\">\r\n                <FormLabel>Email</FormLabel>\r\n                <br></br>\r\n                <TextField\r\n                  variant=\"filled\"\r\n                  margin=\"normal\"\r\n                  className={classes.field}\r\n                  variant=\"filled\"\r\n                  onChange={handleEmailChange}\r\n                  value={`${userObj.email}`}\r\n                />\r\n              </div>\r\n              <div className=\"form-input\">\r\n                <FormLabel>Phone</FormLabel>\r\n                <br></br>\r\n                <TextField\r\n                  variant=\"filled\"\r\n                  margin=\"normal\"\r\n                  className={classes.field}\r\n                  variant=\"filled\"\r\n                  onChange={handleNumberChange}\r\n                  value={`${userObj.phoneNo}`}\r\n                />\r\n              </div>\r\n              <Button className={classes.root} onClick={submitUser}>\r\n                save settings\r\n              </Button>\r\n              <Divider class=\"divider\" />\r\n              <h2>Password Change</h2>\r\n              <div className=\"form-input\">\r\n                <FormLabel>Current Password</FormLabel>\r\n                <br></br>\r\n                <TextField\r\n                  id=\"current-password\"\r\n                  variant=\"filled\"\r\n                  margin=\"normal\"\r\n                  type=\"password\"\r\n                  className={classes.field}\r\n                />\r\n              </div>\r\n              <div className=\"form-input\">\r\n                <FormLabel>Password</FormLabel>\r\n                <br></br>\r\n                <TextField\r\n                  id=\"password\"\r\n                  variant=\"filled\"\r\n                  margin=\"normal\"\r\n                  type=\"password\"\r\n                  className={classes.field}\r\n                  variant=\"filled\"\r\n                />\r\n              </div>\r\n              <div className=\"form-input\">\r\n                <FormLabel>Confirm Password</FormLabel>\r\n                <br></br>\r\n                <TextField\r\n                  id=\"confirm-password\"\r\n                  variant=\"filled\"\r\n                  margin=\"normal\"\r\n                  type=\"password\"\r\n                  className={classes.field}\r\n                  variant=\"filled\"\r\n                />\r\n              </div>\r\n              <Button className={classes.root} onClick={changePassword}>\r\n                save password\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Profile;\r\n","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Signup\\index.js",["107"],"import {\r\n  Avatar,\r\n  Button,\r\n  Container,\r\n  CssBaseline,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport useStyles from \"./style\";\r\nimport Footer from \"../Footer\";\r\nimport { useAlert } from \"react-alert\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nconst Signup = ({ apiURL }) => {\r\n  const classes = useStyles();\r\n  const alert = useAlert();\r\n  const [signUp, setsignUp] = useState(false);\r\n\r\n  const handleSubmit = async () => {\r\n    const name = document.getElementById(\"name\").value;\r\n    const email = document.getElementById(\"email\").value;\r\n    const phoneNo = document.getElementById(\"phone-no\").value;\r\n    const password = document.getElementById(\"password\").value;\r\n    const passwordConfirm = document.getElementById(\"confirm-password\").value;\r\n    try {\r\n      await axios({\r\n        method: \"post\",\r\n        url: `${apiURL}/users/signup`,\r\n        data: {\r\n          name,\r\n          email,\r\n          phoneNo,\r\n          password,\r\n          passwordConfirm,\r\n        },\r\n        withCredentials: true,\r\n      });\r\n      alert.success(\"Sign up successfully. please login\");\r\n      setsignUp(true);\r\n    } catch (err) {\r\n      alert.error(err.response.data.message);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {signUp == true ? (\r\n        <Redirect to=\"/login\" />\r\n      ) : (\r\n        <Container className=\"grid--container\" maxWidth=\"md\">\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign up\r\n              </Typography>\r\n              <form className={classes.form} noValidate>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      autoComplete=\"name\"\r\n                      name=\"Name\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"name\"\r\n                      label=\"Name\"\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"phone-no\"\r\n                      label=\"PhoneNo\"\r\n                      name=\"PhoneNo\"\r\n                      autoComplete=\"phoneNo\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"Confirm Password\"\r\n                      label=\"Confirm Password\"\r\n                      type=\"password\"\r\n                      id=\"confirm-password\"\r\n                      autoComplete=\"confirm-password\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  className={classes.submit}\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n                <Grid container justify=\"flex-end\">\r\n                  <Grid item>\r\n                    <Link to=\"/login\" variant=\"body2\">\r\n                      Already have an account? Sign in\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n          </Container>\r\n        </Container>\r\n      )}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\nexport default Signup;\r\n","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Ads\\index.js",["108","109"],"import {\r\n  Box,\r\n  CardMedia,\r\n  CircularProgress,\r\n  ClickAwayListener,\r\n  Container,\r\n  IconButton,\r\n  makeStyles,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport \"./index.css\";\r\nimport Footer from \"../Footer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    width: \"160px\",\r\n    height: \"140px\",\r\n    border: \"1px solid #cca\",\r\n    margin: \"7%\",\r\n    marginLeft: \"10%\",\r\n    objectFit: \"fill\",\r\n  },\r\n  root: {\r\n    position: \"relative\",\r\n  },\r\n  dropdown: {\r\n    position: \"absolute\",\r\n    top: 28,\r\n    right: 0,\r\n    left: 0,\r\n    zIndex: 1,\r\n    boxShadow: \"0px 0px 2px 3px #ccc\",\r\n    borderRadius: \"5px\",\r\n    padding: theme.spacing(1),\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginLeft: \"-70px\",\r\n    fontWeight: \"600\",\r\n    height: \"100px\",\r\n  },\r\n  prog: {\r\n    display: \"flex\",\r\n    paddingLeft: \"45%\",\r\n  },\r\n}));\r\n\r\nconst Favourites = ({ apiURL }) => {\r\n  const classes = useStyles();\r\n  const alert = useAlert();\r\n  const [adsList, setadsList] = useState([]);\r\n  const [openedId, setopenedId] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [loading, setloading] = useState(true);\r\n  const [operationPerformed, setoperationPerformed] = useState(0);\r\n\r\n  const handleClick = (id) => {\r\n    setopenedId(id);\r\n    setOpen((prev) => !prev);\r\n  };\r\n  const handleClickAway = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const deleteItem = async (productId) => {\r\n    try {\r\n      let response = await axios.get(`${apiURL}/users/myAds/${productId}`, {\r\n        withCredentials: true,\r\n      });\r\n      console.log(response);\r\n      alert.success(\"item deleted successfully\");\r\n      setoperationPerformed((prev) => (prev == 0 ? 1 : 0));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      try {\r\n        setloading(true);\r\n        let response = await axios.get(`${apiURL}/users/myAds`, {\r\n          withCredentials: true,\r\n        });\r\n        setadsList((adsList) => response.data.data.products);\r\n        setloading(false);\r\n      } catch (err) {\r\n        alert.error(\"Something went wrong, please try again later\");\r\n      }\r\n    }\r\n    getData();\r\n  }, [operationPerformed]);\r\n  return (\r\n    <>\r\n      {loading === true ? (\r\n        <div className={classes.prog}>\r\n          <CircularProgress size={70} />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"content\">\r\n            <Container className=\"grid--container\" maxWidth=\"md\">\r\n              <Typography\r\n                variant=\"h4\"\r\n                style={{ fontWeight: 600 }}\r\n                color=\"primary\"\r\n              >\r\n                Your Ads\r\n              </Typography>\r\n              <br></br>\r\n              {adsList.map((el, index) => (\r\n                <>\r\n                  <div key={el._id} className=\"favourite-box\">\r\n                    <Link to={`/item/${el._id}`}>\r\n                      <CardMedia\r\n                        className={classes.media}\r\n                        component=\"img\"\r\n                        image={`${el.images[0]}`}\r\n                        title={`${el.name}`}\r\n                      />\r\n                    </Link>\r\n                    <Link\r\n                      to={`/item/${el._id}`}\r\n                      style={{\r\n                        textDecoration: \"none\",\r\n                        color: \"initial\",\r\n                        marginLeft: \"5%\",\r\n                      }}\r\n                    >\r\n                      <Box pt={4}>\r\n                        <Box>\r\n                          <Typography variant=\"h6\" color=\"textPrimary\">\r\n                            {el.name}\r\n                          </Typography>\r\n                        </Box>\r\n                        <Box py={2}>\r\n                          <Typography variant=\"subtitle1\">\r\n                            ₹{el.price}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                    </Link>\r\n                    <div className=\"popper\">\r\n                      <ClickAwayListener\r\n                        onClickAway={\r\n                          openedId === index ? handleClickAway : () => {}\r\n                        }\r\n                      >\r\n                        <div className={classes.root}>\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              handleClick(index);\r\n                            }}\r\n                          >\r\n                            <MoreHorizIcon fontSize=\"large\" />\r\n                          </IconButton>\r\n                          {openedId === index ? (\r\n                            open ? (\r\n                              <div className={classes.dropdown}>\r\n                                <MenuItem onClick={() => deleteItem(el._id)}>\r\n                                  Delete Ad\r\n                                </MenuItem>\r\n                                <MenuItem>Update Ad</MenuItem>\r\n                              </div>\r\n                            ) : null\r\n                          ) : null}\r\n                        </div>\r\n                      </ClickAwayListener>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              ))}\r\n            </Container>\r\n          </div>\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Favourites;\r\n","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Login\\index.js",["110","111","112"],"import {\r\n  Avatar,\r\n  Button,\r\n  Container,\r\n  CssBaseline,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport useStyles from \"./style\";\r\nimport Footer from \"../Footer\";\r\n\r\nconst Login = ({ setisLoggedIn, setcurUser, isLoggedIn, apiURL }) => {\r\n  const classes = useStyles();\r\n  const alert = useAlert();\r\n  const handleSubmit = async () => {\r\n    let email = document.getElementById(\"email\").value;\r\n    let password = document.getElementById(\"password\").value;\r\n    let response;\r\n    try {\r\n      response = await axios({\r\n        method: \"post\",\r\n        url: `${apiURL}/users/login`,\r\n        data: {\r\n          email,\r\n          password,\r\n        },\r\n        withCredentials: true ,\r\n      });\r\n      setisLoggedIn(true);\r\n      setcurUser(response.data.data.user);\r\n      alert.success(\"Login successfully\");\r\n    } catch (err) {\r\n      alert.error(err.response.data.message);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {isLoggedIn == true ? (\r\n        <Redirect to=\"/\" />\r\n      ) : (\r\n        <>\r\n          <div className={classes.content}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n              <CssBaseline />\r\n              <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                  <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                  Sign in\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    autoFocus\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                  <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.submit}\r\n                    onClick={handleSubmit}\r\n                  >\r\n                    Sign In\r\n                  </Button>\r\n                </form>\r\n              </div>\r\n            </Container>\r\n          </div>\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Login;\r\n","C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\ProductForm\\index.js",[],"C:\\Users\\Subhash\\Desktop\\Buy n Sell\\src\\Component\\Footer\\index.js",[],["113","114"],{"ruleId":"115","severity":1,"message":"116","line":3,"column":23,"nodeType":"117","messageId":"118","endLine":3,"endColumn":28},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":71,"column":13,"nodeType":"125","endLine":71,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":75,"column":25,"nodeType":"128","messageId":"129","endLine":75,"endColumn":27},{"ruleId":"115","severity":1,"message":"130","line":24,"column":16,"nodeType":"117","messageId":"118","endLine":24,"endColumn":24},{"ruleId":"131","severity":1,"message":"132","line":94,"column":6,"nodeType":"133","endLine":94,"endColumn":16,"suggestions":"134"},{"ruleId":"126","severity":1,"message":"127","line":98,"column":16,"nodeType":"128","messageId":"129","endLine":98,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":307,"column":33,"nodeType":"128","messageId":"129","endLine":307,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":324,"column":33,"nodeType":"128","messageId":"129","endLine":324,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":341,"column":33,"nodeType":"128","messageId":"129","endLine":341,"endColumn":35},{"ruleId":"123","severity":1,"message":"124","line":39,"column":19,"nodeType":"125","endLine":39,"endColumn":35},{"ruleId":"131","severity":1,"message":"135","line":134,"column":6,"nodeType":"133","endLine":134,"endColumn":8,"suggestions":"136"},{"ruleId":"126","severity":1,"message":"127","line":80,"column":45,"nodeType":"128","messageId":"129","endLine":80,"endColumn":47},{"ruleId":"131","severity":1,"message":"132","line":103,"column":6,"nodeType":"133","endLine":103,"endColumn":26,"suggestions":"137"},{"ruleId":"115","severity":1,"message":"138","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":33},{"ruleId":"139","severity":1,"message":"140","line":159,"column":19,"nodeType":"141","endLine":159,"endColumn":35},{"ruleId":"139","severity":1,"message":"140","line":171,"column":19,"nodeType":"141","endLine":171,"endColumn":35},{"ruleId":"139","severity":1,"message":"140","line":183,"column":19,"nodeType":"141","endLine":183,"endColumn":35},{"ruleId":"139","severity":1,"message":"140","line":213,"column":19,"nodeType":"141","endLine":213,"endColumn":35},{"ruleId":"139","severity":1,"message":"140","line":225,"column":19,"nodeType":"141","endLine":225,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":50,"column":15,"nodeType":"128","messageId":"129","endLine":50,"endColumn":17},{"ruleId":"126","severity":1,"message":"127","line":76,"column":45,"nodeType":"128","messageId":"129","endLine":76,"endColumn":47},{"ruleId":"131","severity":1,"message":"132","line":96,"column":6,"nodeType":"133","endLine":96,"endColumn":26,"suggestions":"142"},{"ruleId":"115","severity":1,"message":"143","line":11,"column":10,"nodeType":"117","messageId":"118","endLine":11,"endColumn":18},{"ruleId":"115","severity":1,"message":"144","line":13,"column":10,"nodeType":"117","messageId":"118","endLine":13,"endColumn":14},{"ruleId":"126","severity":1,"message":"127","line":43,"column":19,"nodeType":"128","messageId":"129","endLine":43,"endColumn":21},{"ruleId":"119","replacedBy":"145"},{"ruleId":"121","replacedBy":"146"},"no-unused-vars","'types' is defined but never used.","Identifier","unusedVar","no-native-reassign",["147"],"no-negated-in-lhs",["148"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'alert' and 'apiURL'. Either include them or remove the dependency array.","ArrayExpression",["149"],"React Hook useEffect has missing dependencies: 'alert', 'apiURL', 'classes.btn', 'classes.sliderWrapper', 'id', and 'isLoggedIn'. Either include them or remove the dependency array.",["150"],["151"],"'SignalWifi1BarLockSharp' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["152"],"'useState' is defined but never used.","'Link' is defined but never used.",["147"],["148"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"157","fix":"159"},"Update the dependencies array to be: [alert, apiURL, location]",{"range":"160","text":"161"},"Update the dependencies array to be: [alert, apiURL, classes.btn, classes.sliderWrapper, id, isLoggedIn]",{"range":"162","text":"163"},"Update the dependencies array to be: [alert, apiURL, operationPerformed]",{"range":"164","text":"165"},{"range":"166","text":"165"},[2638,2648],"[alert, apiURL, location]",[4467,4469],"[alert, apiURL, classes.btn, classes.sliderWrapper, id, isLoggedIn]",[2640,2660],"[alert, apiURL, operationPerformed]",[2424,2444]]